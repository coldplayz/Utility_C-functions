@cus_auth_views.route('/signup', methods=['POST'])
def cus_signup_post():
    ''' Process customer registration.
    '''
    from api.v1.views import db, Customers
    # Collect registration details
    first_name = request.form.get('first_name')
    last_name = request.form.get('last_name')
    email = request.form.get('email')  # unique
    phone = request.form.get('phone')  # unique
    username = request.form.get('username') # must be unique in storage
    password = request.form.get('password')
    # todo: validate and save image to file system :done VSFS
    image = request.files.get(
            'profile_pic')  # file object representing image data

    # Validate username
    stmt = db.select(Customers).where(Customers.username==username)
    cus = db.session.scalars(stmt).first()
    if cus:
        # username already exists
        flash(
                'username already exists. Please try another',
                'username_exists'
                )  # include message category
        return redirect(url_for('cus_auth_views.cus_signup', id=str(uuid4())))
    # else set image identifier
    if image.filename:
        # If the user does not select a file, the browser submits an...
        # ...empty file without a filename ('').
        image_uri = current_app.config["CUS_IMAGE_RPATH"] + username + '.jpg'
    else:
        image_uri = None

    # Validate email
    stmt = db.select(Customers).where(Customers.email==email)
    cus = db.session.scalars(stmt).first()
    if cus:
        # username already exists
        flash('email already exists. Please try another', 'email_exists')
        return redirect(url_for('cus_auth_views.cus_signup', id=str(uuid4())))

    # Validate phone
    stmt = db.select(Customers).where(Customers.phone==phone)
    cus = db.session.scalars(stmt).first()
    if cus:
        # phone number already exists
        flash('phone already exists. Please try another', 'phone_exists')
        return redirect(url_for('cus_auth_views.cus_signup', id=str(uuid4())))

    # Persist validated data to database
    new_cus = Customers(
            first_name=first_name,
            last_name=last_name,
            email=email,
            phone=phone,
            username=username,
            password=password,
            image_uri=image_uri
            )
    db.session.add(new_cus)
    db.session.commit()

    # Save image to file system ONLY now
    image.save(current_app.config["CUS_IMAGE_PATH"] + username + '.jpg')  # VSFS

    return redirect(url_for('cus_auth_views.cus_login'))
